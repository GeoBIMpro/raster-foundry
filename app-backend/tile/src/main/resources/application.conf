tile-server {
  http {
    interface = "0.0.0.0"
    port = 9900
  }

  bucket = "rasterfoundry-staging-catalogs-us-east-1"
  bucket = ${?TILE_SERVER_BUCKET}

  # in memory tileserver cache
  cache.enabled = false
  cache.enabled = ${?TILESERVER_CACHE_ENABLED}
}

akka {
  loglevel = "ERROR"
}

blocking-io-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  # This will be used if you have set "executor = "thread-pool-executor""
  # Underlying thread pool implementation is java.util.concurrent.ThreadPoolExecutor
  thread-pool-executor {
    # Keep alive time for threads
    keep-alive-time = 60s

    # Define a fixed thread pool size with this property. The corePoolSize
    # and the maximumPoolSize of the ThreadPoolExecutor will be set to this
    # value, if it is defined. Then the other pool-size properties will not
    # be used.
    #
    # Valid values are: `off` or a positive integer.
    # A fat blocking thread queue
    # In fact doesn't really impac on the processor time
    # Most of Futures would sleep awaiting their time
    # I believe for more than 90% of it's computation times
    # Should be setuped basing on the server load
    fixed-pool-size = 1024

    # Min number of threads to cap factor-based corePoolSize number to
    core-pool-size-min = 8

    # The core-pool-size-factor is used to determine corePoolSize of the
    # ThreadPoolExecutor using the following formula:
    # ceil(available processors * factor).
    # Resulting size is then bounded by the core-pool-size-min and
    # core-pool-size-max values.
    core-pool-size-factor = 3.0

    # Max number of threads to cap factor-based corePoolSize number to
    core-pool-size-max = 64

    # Minimum number of threads to cap factor-based maximumPoolSize number to
    max-pool-size-min = 8

    # The max-pool-size-factor is used to determine maximumPoolSize of the
    # ThreadPoolExecutor using the following formula:
    # ceil(available processors * factor)
    # The maximumPoolSize will not be less than corePoolSize.
    # It is only used if using a bounded task queue.
    max-pool-size-factor  = 3.0

    # Max number of threads to cap factor-based maximumPoolSize number to
    max-pool-size-max = 64

    # Specifies the bounded capacity of the task queue (< 1 == unbounded)
    task-queue-size = -1

    # Specifies which type of task queue will be used, can be "array" or
    # "linked" (default)
    task-queue-type = "linked"

    # Allow core threads to time out
    allow-core-timeout = on
  }
  throughput = 1
}

kamon {
  metric {
    filters {
      trace.includes            = [ "**" ]
      trace-segment.includes    = [ "**" ]
      akka-http-server.includes = [ "**" ]
      counter.includes          = [ "**" ]

      trace.excludes            = [ ]
      trace-segment.excludes    = [ ]
      akka-http-server.excludes = [ ]
      counter.excludes          = [ ]
    }
  }

  subscriptions {
    trace                = [ "**" ]
    trace-segment        = [ "**" ]
    akka-http-server     = [ "**" ]
  }

  statsd {
    hostname = "statsd"
    port = 8125
    time-units = "ms"
    simple-metric-key-generator.application = ${?ENVIRONMENT}.tile
    simple-metric-key-generator.include-hostname = false

    subscriptions {
      histogram       = [ "**" ]
      min-max-counter = [ "**" ]
      gauge           = [ "**" ]
      counter         = [ "**" ]
      trace           = [ "**" ]
      trace-segment   = [ "**" ]
      akka-actor      = [ "**" ]
      akka-dispatcher = [ "**" ]
      akka-router     = [ "**" ]
      system-metric   = [ "**" ]
      http-server     = [ "**" ]
    }
  }
}
